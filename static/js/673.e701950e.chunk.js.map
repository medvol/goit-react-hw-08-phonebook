{"version":3,"file":"static/js/673.e701950e.chunk.js","mappings":"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","sources":["components/Box.js","components/Loader/Loader.jsx","components/ContactList/ContactList.styled.js","redux/contacts/selectors.js","components/ContactList/ContactList.jsx","components/ContactForm/ContactForm.styled.js","components/ContactForm/ContactForm.jsx","pages/Contacts.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { color, space, typography, layout, flexbox, border, shadow } from 'styled-system';\n\nexport const Box = styled('div')(\n    typography,\n    space,\n    color,\n    layout,\n    flexbox,\n    border,\n    shadow\n)","import React from 'react';\nimport { ThreeDots } from 'react-loader-spinner';\nimport { Box } from 'components/Box';\n\nexport const Loader = () => {\n  return (\n    <Box display=\"flex\" justifyContent=\"center\">\n      <ThreeDots\n        height=\"80\"\n        width=\"80\"\n        radius=\"9\"\n        color=\"#3f51b5\"\n        ariaLabel=\"three-dots-loading\"\n        wrapperStyle={{}}\n        wrapperClassName=\"\"\n        visible={true}\n      />\n    </Box>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const ContactListItem = styled.li`\n\n    display: flex;\n    align-items:center;\n    width: ${p => p.theme.space[8]}px;   \n    color: ${p => p.theme.colors.text};\n    font-weight: ${p => p.theme.fontWeights.semibold};\n    font-size: ${p => p.theme.fontSizes.s};\n    :not(:last-child){\n        margin-bottom:${p => p.theme.space[4]}px; \n    };\n    ::before{\n        content:'';        \n        display: block;    \n        margin-right:${p => p.theme.space[3]}px; \n        border-radius: 5${p => p.theme.radii.round};\n        width:${p => p.theme.space[2]}px;\n        height:${p => p.theme.space[2]}px;\n        background-color: ${p => p.theme.colors.black};\n    }        \n`\n\nexport const ContactDeleteButton = styled.button`\ndisplay: inline-flex;\n    align-items:center;\n    justify-content:center;\n    margin-left: auto;\n    font-size: ${p => p.theme.fontSizes.xs};\n    color:  ${p => p.theme.colors.white};\n    padding-top:${p => p.theme.space[2]}px; \n    padding-bottom:${p => p.theme.space[2]}px;      \n    background-color: ${p=> p.theme.colors.primary};\n    border:none;\n    border-radius:${p=>p.theme.radii.normal};\n    transition: background-color 250ms ease-in-out; \n    \n    :hover{\n        background-color: ${p=> p.theme.colors.accent};\n        \n}\n`","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\nexport const selectFilter = state => state.filter.query;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n \n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter)\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Loader } from 'components/Loader/Loader';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ContactListItem, ContactDeleteButton } from './ContactList.styled';\nimport {\n  selectIsLoading,\n  selectError,\n  selectVisibleContacts,\n} from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <div>Something went wrong...</div>}\n      {!isLoading && !error && (\n        <ul>\n          {contacts.map(({ id, name, number }) => (\n            <ContactListItem key={id}>\n              <p>{`${name}: ${number}`}</p>\n              <ContactDeleteButton\n                type=\"button\"\n                onClick={() => dispatch(deleteContact(id))}\n              >\n                Delete\n              </ContactDeleteButton>\n            </ContactListItem>\n          ))}\n        </ul>\n      )}\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nexport const LabelInput = styled.label`\n    color:${p => p.theme.colors.text};\n    font-weight: ${p => p.theme.fontWeights.bold};\n    font-size: ${p => p.theme.fontSizes.s};    \n    margin-bottom:${p => p.theme.space[2]}px;\n`\n\nexport const FormInput = styled.input`\n    display: inline-flex;\n    width: ${p => p.theme.space[8]}px;\n    color: ${p => p.theme.colors.muted};\n    font-weight: ${p => p.theme.fontWeights.normal};\n    font-size: ${p => p.theme.fontSizes.s};    \n    margin-bottom:${p => p.theme.space[4]}px;   \n`\n\nexport const SubmitButton = styled.button`\n    display: inline-flex;\n    align-items:center;\n    justify-content:center;\n    width: ${p => p.theme.space[7]}px;\n    color:  ${p => p.theme.colors.white};\n    padding-top:${p => p.theme.space[2]}px; \n    padding-bottom:${p => p.theme.space[2]}px;      \n    background-color: ${p=> p.theme.colors.primary};\n    border:none;\n    border-radius:${p=>p.theme.radii.normal};\n    transition: background-color 250ms ease-in-out; \n    \n    :hover{\n        background-color: ${p=> p.theme.colors.accent};\n        \n}\n`\n\n\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\nimport { Box } from 'components/Box';\nimport { LabelInput, FormInput, SubmitButton } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const form = event.currentTarget;\n    const { name, number } = form;\n    const contact = {\n      name: name.value,\n      number: number.value,\n    };\n\n    const duplicateContact = contacts.find(\n      contact => contact.name.toLowerCase() === name.value.toLowerCase()\n    );\n\n    if (duplicateContact)\n      return window.alert(`${name.value} is already in contacts`);\n\n    dispatch(addContact(contact));\n    form.reset();\n  };\n\n  return (\n    <Box\n      border=\"normal\"\n      p={3}\n      mb={5}\n      mt={3}\n      display=\"flex\"\n      flexDirection=\"column\"\n      onSubmit={handleSubmit}\n      as=\"form\"\n    >\n      <LabelInput htmlFor=\"name\">Name</LabelInput>\n      <FormInput\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n      />\n      <LabelInput htmlFor=\"number\">Number</LabelInput>\n      <FormInput\n        type=\"tel\"\n        name=\"number\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n      />\n      <SubmitButton type=\"submit\">Add contact</SubmitButton>\n    </Box>\n  );\n};\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport {ContactForm} from 'components/ContactForm/ContactForm'\n\n\nexport default function Contacts() {\n      const dispatch = useDispatch();\n\n      useEffect(() => {\n        dispatch(fetchContacts());\n      }, [dispatch]);\n  return (\n    <>\n      <div>Contacts Hello</div>\n      <ContactForm />\n      <ContactList />\n    </>\n  );\n}\n"],"names":["Box","styled","typography","space","color","layout","flexbox","border","shadow","Loader","display","justifyContent","height","width","radius","ariaLabel","wrapperStyle","wrapperClassName","visible","ContactListItem","p","theme","colors","text","fontWeights","semibold","fontSizes","s","radii","round","black","ContactDeleteButton","xs","white","primary","normal","accent","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","query","contact","name","toLowerCase","includes","ContactList","dispatch","useDispatch","useSelector","map","id","number","type","onClick","deleteContact","LabelInput","bold","FormInput","muted","SubmitButton","ContactForm","mb","mt","flexDirection","onSubmit","event","preventDefault","form","currentTarget","value","duplicateContact","find","window","alert","addContact","reset","as","htmlFor","pattern","title","required","Contacts","useEffect","fetchContacts"],"sourceRoot":""}